<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>Prof. Frank Dehne</title>

  

  
  
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></head><body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);" alink="#000000" link="#000000" vlink="#000000">
<table border="0" width="100%">

  <tbody>
    <tr>
      <td height="27" width="45%">
      <h2>COMP 5704: Parallel Algorithms and Applications in Data Science<br>
</h2>
      </td>
      <td height="27" width="10%">
      <p><br>
      </p>
      </td>
      <td height="27" width="45%">
      <p><b>School of Computer Science</b><br>
      <b>Carleton University, Ottawa, Canada</b></p>
      </td>
    </tr>
  </tbody>
</table>

<hr noshade="noshade">
<h2><font color="#005128">Project Title: </font><font><font color="#005128">GPU-powered(CUDA) semi-supervised anomaly detection on streamed data</font></font></h2>

<h2><font color="#005128">Name: Kangqing Yu<br>
</font></h2>

<hr noshade="noshade">
<b><font color="#005128">Project Outline:</font></b>Anomaly detection or sometimes refered as outlier detection is a topic in data mining and maching learning that involves a process of identification of items which largely differ from the rest of the group. When the data come in form of stream, this task becomes very challengeing because stream data, by it nature, is large, continous and change over time. In addition, questions exists on how we can achieve better result based on the historical data we have already seen and the newly arrived data from stream. One technique which we have been already used to solve this problem is semi-supervised anomaly detection which combines both unsupervised and supervised machine learning techniques to predict the new data instance based on the learnt model. However, this would require a large computation and it becomes unpractical on stream data. Therefore, it is interesting to know how other programming models such as parallel programming could benefit such tasks. In this project, I will investigate into how GPU programming, CUDA specificaly could facilitate this task.
<p><b><font color="#005128">Startup Paper(s):</font></b> <a href="PDF_files_of_relevant_papers/07516110.pdf">GPU-Accelerated Outlier Detection for Continuous Data Streams
</a></p>

<p><b><font color="#005128">Deliverables:</font></b></p>

<ul>

  <li>
    <div align="left"><a href="Literature_Review.pdf"><font color="#000000">Literature Review</font></a> (PDF file created from
LATEX template)</div>
  </li>
  <li>
    <div align="left"><a href="Presentation_Outline.pdf"><font color="#000000">Presentation Outline</font></a> (PDF file created from
LATEX template)</div>
  </li>
  <li>
    <div align="left"> <a href="Slide_Presentation.ppt"><font color="#000000">Slide Presentation</font></a> (PowerPoint File) incl.
Question Sheet </div>
  </li>
  <li>
    <div align="left"><a href="Final_Paper.pdf"><font color="#000000">Final
Paper</font></a> (PDF file created from LATEX template)</div>
  </li>
  <li><a href="Code_and_Data"><font color="#000000">Code and Data</font></a>
(put all code, data, etc. into this directory)</li>
</ul>

<p><b><font color="#005128">Relevant References:</font></b></p>

<ul>

  <li>list all relevant papers and include links to their PDF files</li>
</ul>

</body></html>